version: "3.9"
networks:
  school-network:
    external: true
services:
  postgres123:
    image: postgres:12-alpine
    container_name: postgres123
    ports:
      - "5434:5432"
    networks:
      - school-network
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=lessons

  course-service:
    image: eliriat/course-service
    build:
      context: ./course
      dockerfile: ./Dockerfile
    container_name: course-service
    networks:
      - school-network
    environment:
      - DB_URL=postgresql://root:secret@postgres123:5432/lessons?sslmode=disable
      - SD_URL=service-discovery:4040
      - MY_URL=course-service:8082
      - SCHOOL_URL=school-service:8081
      - PORT=:8082
    depends_on:
      - postgres123
      - service-discovery
    restart: always
    ports:
      - "8082:8082"
    expose:
      - "8082"
    entrypoint:
      [
        "/course/wait-for.sh",
        "postgres123:5432",
        "--",
        "/course/main"
      ]

  course-service2:
    image: eliriat/course-service
    build:
      context: ./course
      dockerfile: ./Dockerfile
    container_name: course-service2
    networks:
      - school-network
    environment:
      - DB_URL=postgresql://root:secret@postgres123:5432/lessons?sslmode=disable
      - SD_URL=service-discovery:4040
      - MY_URL=course-service2:8084
      - SCHOOL_URL=school-service:8081
      - PORT=:8084
    depends_on:
      - postgres123
      - service-discovery
      - course-service
    restart: always
    ports:
      - "8084:8084"
    expose:
      - "8084"
    entrypoint:
      [
        "/course/wait-for.sh",
        "postgres123:5432",
        "--",
        "/course/main"
      ]

  postgres12:
    image: postgres:12-alpine
    container_name: postgres12
    ports:
      - "5432:5432"
    networks:
      - school-network
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=school

  school-service:
    image: eliriat/school-service
    build:
      context: ./school
      dockerfile: ./Dockerfile
    container_name: school-service
    networks:
      - school-network
    environment:
      - DB_URL=postgresql://root:secret@postgres12:5432/school?sslmode=disable
      - SD_URL=service-discovery:4040
      - MY_URL=school-service:8081
      - PORT=:8081
    depends_on:
      - postgres12
      - service-discovery
    restart: always
    ports:
      - "8081:8081"
      - "2112:2112"
    expose:
      - "8081"
      - "2112"
    entrypoint:
      [
        "/school/wait-for.sh",
        "postgres12:5432",
        "--",
        "/school/main"
      ]

  school-service2:
    image: eliriat/school-service
    build:
      context: ./school
      dockerfile: ./Dockerfile
    container_name: school-service2
    networks:
      - school-network
    environment:
      - DB_URL=postgresql://root:secret@postgres12:5432/school?sslmode=disable
      - SD_URL=service-discovery:4040
      - MY_URL=school-service2:8086
      - PORT=:8086
    depends_on:
      - postgres12
      - service-discovery
      - school-service
    restart: always
    ports:
      - "8086:8086"
    expose:
      - "8086"
    entrypoint:
      [
        "/school/wait-for.sh",
        "postgres12:5432",
        "--",
        "/school/main"
      ]

  gateway:
    image: eliriat/gateway
    build:
      context: ./gateway
      dockerfile: ./Dockerfile
    container_name: gateway
    networks:
      - school-network
    environment:
      MIX_ENV: dev
      SD_DOMAIN: service-discovery
      SD_PORT: 4040
      REDIS1: redis1
      REDIS_PORT1: 6380
      REDIS2: redis2
      REDIS_PORT2: 6381
      REDIS3: redis3
      REDIS_PORT3: 6382
    depends_on:
      - school-service
      - course-service
      - service-discovery
      - course-service2
      - school-service2
    restart: always
    ports:
      - "8080:8080"
    expose:
      - "8080"

  service-discovery:
    image: eliriat/service-discovery
    build:
      context: ./service-discovery
      dockerfile: ./Dockerfile
    container_name: service-discovery
    networks:
      - school-network
    environment:
      MIX_ENV: dev
    restart: always
    ports:
      - "4040:4040"
    expose:
      - "4040"

  redis1:
    image: redis:latest
    container_name: redis1
    command: --port 6380
    networks:
      - school-network
    ports:
      - "6380:6380"

  redis2:
    image: redis:latest
    container_name: redis2
    command: --port 6381
    networks:
      - school-network
    ports:
      - "6381:6381"

  redis3:
    image: redis:latest
    container_name: redis3
    command: --port 6382
    networks:
      - school-network
    ports:
      - "6382:6382"

  prometheus:
    image: prom/prometheus:v2.37.9
    container_name: prometheus
    networks:
      - school-network
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    networks:
      - school-network
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped

volumes:
  grafana-data:
    driver: local
  prometheus-data:
    driver: local